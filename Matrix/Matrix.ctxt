#BlueJ class context
comment0.target=Matrix
comment0.text=\r\n\ The\ Matrix\ class\ allows\ to\ do\ several\ operations\ with\ matrices.\r\n\r\n\ @author\ Paula\ D\u00EDaz\ \u00C1lvarez\r\n\ @version\ 28/11/2022\r\n
comment1.params=dimension
comment1.target=Matrix(int)
comment1.text=\r\n\ Constructor\ for\ creating\ a\ squared\ matrix\ of\ a\ given\ dimension\ filled\ with\ random\ integers\ between\ 0\ and\ 255.\r\n\ If\ the\ given\ dimension\ is\ less\ than\ or\ equal\ to\ 0,\ or\ higher\ than\ 20,\ an\ error\ message\ will\ appear\r\n\ @param\ dimension\ It's\ the\ dimension\ for\ the\ matrix\ that\ is\ going\ to\ be\ created\r\n
comment10.params=
comment10.target=int[][]\ smoothMatrix()
comment10.text=\r\n\ Returns\ a\ matrix\ where\ each\ element\ corresponds\ with\ the\ average\ of\ its\ neighbours\ (excluding\ the\ element\ itself)\r\n\ of\ the\ original\ matrix\r\n\ @return\ The\ matrix\ that\ has\ as\ elements\ the\ average\ of\ the\ neighbours\r\n
comment2.params=matrix
comment2.target=Matrix(int[][])
comment2.text=\r\n\ Constructor\ for\ creating\ a\ copy\ of\ a\ given\ matrix.\r\n\ If\ the\ given\ matrix\ is\ not\ square,\ an\ error\ message\ will\ appear.\ If\ the\ dimension\ of\ the\ given\ matrix\ is\ less\ than\ or\ equal\ to\ 0\r\n\ or\ higher\ than\ 20,\ another\ error\ message\ will\ appear\r\n\ @param\ matrix\ Corresponds\ to\ the\ given\ matrix\r\n
comment3.params=condition\ message
comment3.target=void\ checkParam(boolean,\ java.lang.String)
comment3.text=\r\n\ Throws\ a\ given\ error\ message\ if\ the\ given\ condition\ is\ not\ true\r\n\ @param\ condition\ It's\ the\ condition\ that\ is\ going\ to\ be\ checked\r\n\ @param\ message\ It's\ the\ error\ message\ that\ is\ going\ to\ be\ thrown\ if\ the\ condition\ is\ not\ true\r\n
comment4.params=
comment4.target=int[][]\ getMatrix()
comment4.text=\r\n\ Returns\ a\ copy\ of\ the\ matrix.\r\n\ @return\ A\ copy\ of\ the\ matrix\r\n
comment5.params=
comment5.target=java.util.ArrayList\ flattenMatrix()
comment5.text=\r\n\ Returns\ the\ content\ of\ the\ matrix\ \u201Cflattened\u201D\ (returns\ the\ content\ of\ the\ matrix\ in\ one\ row)\r\n\ @return\ The\ content\ of\ the\ matrix\ in\ one\ row\r\n
comment6.params=
comment6.target=void\ swapReveseByDiagonals()
comment6.text=\r\n\ Interchanges\ the\ elements\ of\ the\ two\ diagonals\ of\ the\ matrix\r\n
comment7.params=column
comment7.target=void\ moveColumn(int)
comment7.text=\r\n\ Move\ the\ elements\ of\ the\ given\ column\ to\ the\ last\ column\ of\ the\ matrix,\ moving\ the\ rest\ of\ the\ columns\ one\ position\ to\r\n\ the\ left.\ \r\n\ If\ the\ number\ of\ column\ is\ not\ valid,\ an\ error\ message\ will\ appear\r\n\ @param\ column\ It's\ the\ number\ of\ the\ column\ that\ you\ want\ to\ move\r\n
comment8.params=
comment8.target=void\ print()
comment8.text=\r\n\ Prints\ the\ content\ of\ the\ matrix\ in\ a\ matrix\ format\r\n
comment9.params=flatMatrix
comment9.target=int\ replaceMatrix(java.util.ArrayList)
comment9.text=\r\n\ Replace\ as\ many\ elements\ of\ the\ matrix\ as\ possible\ with\ the\ elements\ of\ the\ flatMatrix\r\n\ @param\ flatMatrix\ It's\ the\ matrix\ that\ replaces\ the\ elements\ of\ the\ other\ one\r\n\ @return\ The\ number\ of\ elements\ replaced\r\n
numComments=11

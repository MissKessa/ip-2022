#BlueJ class context
comment0.target=Math
comment0.text=\r\n\ Generic\ class\ to\ perform\ mathematical\ operations.\r\n\ \r\n\ @Paula\ D\u00EDaz\ \u00C1lvarez\r\n\ @version\ 2022/9/16\r\n
comment1.params=
comment1.target=Math()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Math\r\n
comment10.params=a\ b
comment10.target=int[][]\ sumMatrix(int[][],\ int[][])
comment10.text=\r\n\ Returs\ the\ sum\ of\ 2\ given\ matrices.\ If\ the\ dimension\ of\ the\ matrices\ is\ different,\ an\ error\ message\ will\ appear\r\n\ @param\ a\ It's\ one\ of\ the\ given\ matrices\r\n\ @param\ b\ It's\ other\ given\ matrix\r\n\ @return\ The\ sum\ of\ the\ 2\ matrices\r\n
comment2.params=condition\ message
comment2.target=void\ checkParam(boolean,\ java.lang.String)
comment2.text=\r\n\ Throws\ a\ given\ error\ message\ if\ the\ given\ condition\ is\ not\ true\r\n\ @param\ condition\ It's\ the\ condition\ that\ is\ going\ to\ be\ checked\r\n\ @param\ message\ It's\ the\ error\ message\ that\ is\ thrown\ if\ the\ condition\ is\ not\ true\r\n
comment3.params=base\ height
comment3.target=double\ computeArea(double,\ double)
comment3.text=\r\n\ Computes\ the\ area\ of\ a\ triangle\ from\ a\ given\ base\ and\ given\ height.\r\n\ Measurements\ are\ given\ in\ metric\ systems.\r\n\ @param\ base\ It's\ the\ base\ of\ the\ triangle.\ This\ value\ must\ be\ 0\ or\ higher\r\n\ @param\ height\ It's\ the\ height\ of\ the\ triangle.\ This\ value\ must\ be\ 0\ or\ higher\r\n\ @return\ The\ area\ of\ the\ triangle\ in\ squared\ units.\r\n
comment4.params=text
comment4.target=boolean\ isPalindrome(java.lang.String)
comment4.text=\r\n\ Checks\ if\ the\ text\ is\ a\ Palindrome\ (it's\ the\ same\ reading\ the\ text\ from\ left\ to\ right\ and\ reading\ it\ from\ right\ to\ left)\r\n\ Blanks\ are\ not\ consider.\ If\ the\ text\ is\ nulll,\ an\ error\ message\ will\ appear.\r\n\ @param\ text\ It's\ the\ text\ that\ is\ going\ to\ be\ checked\r\n\ @return\ True\ if\ the\ test\ is\ a\ Palindrome\r\n
comment5.params=limit
comment5.target=java.util.ArrayList\ getPrimesUnder(int)
comment5.text=\r\n\ Returns\ a\ list\ containing\ the\ prime\ numbers\ lower\ than\ the\ given\ limit\ (included).\ If\ the\ limit\ is\ negative,\ an\ error\ message\ will\ appear\r\n\ @param\ limit\ It's\ the\ upper\ limit\ for\ calculating\ the\ primes\r\n\ @return\ A\ list\ containing\ the\ prime\ numbers\ lower\ than\ given\ limit\r\n
comment6.params=list
comment6.target=java.lang.String\ toString(java.util.ArrayList)
comment6.text=\r\n\ Returns\ a\ string\ from\ a\ given\ list.\ If\ the\ list\ is\ null\ an\ error\ message\ will\ appear\r\n\ @param\ list\ It's\ the\ given\ list\ to\ convert\ to\ a\ String\r\n\ @return\ A\ string\ from\ a\ given\ list\r\n
comment7.params=array
comment7.target=int[]\ sortIntArray(int[])
comment7.text=\r\n\ Returns\ a\ list\ containing\ the\ numbers\ of\ the\ given\ limit\ sorted\ in\ ascending\ order.\ If\ the\ list\ is\ null,\ an\ error\ message\ will\ appear\r\n\ @param\ array\ It's\ the\ given\ list\ containing\ the\ numbers\r\n\ @return\ A\ list\ containing\ the\ of\ the\ given\ limit\ sorted\ in\ ascending\ order\r\n
comment8.params=row\ col
comment8.target=int[][]\ randomMatrix(int,\ int)
comment8.text=\r\n\ Returns\ a\ matrix\ filled\ with\ non\ repeated\ random\ values\ for\ the\ given\ dimensions\r\n\ @param\ row\ It's\ the\ amount\ of\ rows\ that\ will\ have\ the\ matrix\r\n\ @param\ col\ It's\ the\ amount\ of\ columns\ that\ will\ have\ the\ matrix\r\n\ @return\ The\ matrix\ filled\ with\ non\ repeates\ random\ values\r\n
comment9.params=input
comment9.target=boolean\ verifyUniqueElements(int[])
comment9.text=\r\n\ Checks\ if\ a\ given\ list\ is\ filled\ with\ non\ repeated\ values\r\n\ @param\ input\ It's\ the\ given\ list\ that\ it's\ going\ to\ be\ checked\r\n\ @return\ True\ if\ the\ list\ has\ unique\ elements\r\n
numComments=11

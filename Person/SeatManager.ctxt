#BlueJ class context
comment0.target=SeatManager
comment0.text=\r\n\ This\ class\ models\ the\ SeatManager\ of\ the\ Airplane\ where\ you\ can\ set\ the\ size\ of\ it;\ sit\ passengers;\ fill\ the\ airplane;\r\n\ print\ the\ seats...\r\n\r\n\ @Paula\ D\u00EDaz\ \u00C1lvarez\r\n\ @15/11/2022\r\n
comment1.params=firstClassRows\ standardClassRows
comment1.target=SeatManager(int,\ int)
comment1.text=\r\n\ Constructor\ that\ creates\ a\ SeatManger\ with\ a\ given\ number\ of\ first\ class\ rows\ and\ a\ given\ number\ of\ standard\ class\ rows.\r\n\ If\ this\ numbers\ are\ negative,\ an\ error\ will\ appear\r\n\ @param\ firstClassRows\ It's\ the\ number\ of\ first\ class\ rows\ that\ will\ have\ the\ SeatManager\r\n\ @param\ standardClassRows\ It's\ the\ number\ of\ standard\ class\ rows\ that\ will\ have\ the\ SeatManager\r\n
comment10.params=
comment10.target=int\ getSizeFirstClass()
comment10.text=\r\n\ Returns\ the\ number\ of\ first\ class\ seats\ that\ are\ in\ the\ airplane\r\n\ @return\ The\ number\ of\ first\ class\ seats\ that\ are\ in\ the\ airplane\r\n
comment11.params=
comment11.target=int\ getSizeStandardClass()
comment11.text=\r\n\ Returns\ the\ number\ of\ standard\ class\ seats\ that\ are\ in\ the\ airplane\r\n\ @return\ The\ number\ of\ standard\ class\ seats\ that\ are\ in\ the\ airplane\r\n
comment12.params=person\ row\ col
comment12.target=void\ bookSeat(Person,\ int,\ int)
comment12.text=\r\n\ Assigns\ a\ given\ seat\ to\ a\ given\ person\ when\ the\ seat\ exists\ and\ the\ seat\ is\ not\ already\ reserved.\ If\ not\ a\ error\ message\r\n\ will\ appear.\r\n\ @param\ person\ It's\ the\ person\ that\ books\ that\ seat\r\n\ @param\ row\ It's\ the\ number\ of\ the\ row\ of\ the\ seat\r\n\ @param\ col\ It's\ the\ number\ of\ the\ column\ of\ the\ seat\r\n
comment13.params=row\ col
comment13.target=boolean\ isReserved(int,\ int)
comment13.text=\r\n\ Checks\ if\ a\ given\ seat\ is\ reserved\ or\ not.\r\n\ @param\ row\ It's\ the\ number\ of\ the\ row\ of\ the\ seat\r\n\ @param\ col\ It's\ the\ number\ of\ the\ column\ of\ the\ seat\r\n\ @return\ True\ if\ the\ seat\ is\ not\ empty\ (not\ reserved)\r\n
comment14.params=row\ col
comment14.target=Person\ getReservation(int,\ int)
comment14.text=\r\n\ Returns\ the\ Person\ that\ has\ booked\ the\ seat\r\n\ @param\ row\ It's\ the\ number\ of\ the\ row\ of\ the\ seat\r\n\ @param\ col\ It's\ the\ number\ of\ the\ column\ of\ the\ seat\r\n\ @return\ The\ person\ that\ has\ booked\ the\ seat\r\n
comment15.params=row\ col
comment15.target=void\ releaseSeat(int,\ int)
comment15.text=\r\n\ Releases\ a\ given\ seat\ (cancels\ the\ reservation)\r\n\ @param\ row\ It's\ the\ number\ of\ the\ row\ of\ the\ seat\r\n\ @param\ col\ It's\ the\ number\ of\ the\ column\ of\ the\ seat\r\n
comment16.params=
comment16.target=int\ getNumPax()
comment16.text=\r\n\ Returns\ the\ number\ of\ passengers\ of\ all\ the\ Airplane\r\n\ @return\ The\ number\ of\ passengers\r\n
comment17.params=area
comment17.target=int\ getNumPax(byte)
comment17.text=\r\n\ Returns\ the\ number\ of\ passengers\ of\ a\ given\ area\ that\ can\ be\:\ FIRST_CLASS,\ STANDARD_CLASS\ or\ ALL_CLASSES\r\n\ @param\ area\ It's\ the\ area\ where\ do\ you\ want\ to\ count\ the\ passengers\r\n\ @return\ The\ number\ of\ passengers\ of\ that\ area\r\n
comment18.params=area\ section
comment18.target=int\ getNumPax(byte,\ byte)
comment18.text=\r\n\ Returns\ the\ number\ of\ passengers\ of\ a\ given\ area\ that\ can\ be\:\ FIRST_CLASS,\ STANDARD_CLASS\ or\ ALL_CLASSES\r\n\ and\ a\ given\ section\ that\ can\ be\:\ STARBOARD_WINDOW\ (right),\ BOARD_WINDOW\ (left),\ BOTH_WINDOWS,\ LEFT_AISLE,\ RIGHT_AISLE,\ \r\n\ BOTH_AISLES\ or\ EVERYWHERE\r\n\ @param\ area\ It's\ the\ area\ where\ do\ you\ want\ to\ count\ the\ passengers\r\n\ @param\ section\ It's\ the\ section\ where\ do\ you\ want\ to\ count\ the\ passengers\r\n\ @return\ The\ number\ of\ passengers\ of\ that\ area\ and\ that\ section\r\n
comment19.params=paxNumber
comment19.target=void\ loadPaxNotDistributed(int)
comment19.text=\r\n\ Fills\ in\ order\ the\ airplane\ with\ a\ given\ number\ of\ virtual\ passengers\r\n\ @param\ paxNumber\ It's\ the\ number\ of\ passengers\ that\ you\ want\ to\ sit\r\n
comment2.params=condition\ message
comment2.target=void\ checkParam(boolean,\ java.lang.String)
comment2.text=\r\n\ Throws\ a\ given\ error\ message\ if\ the\ given\ condition\ is\ not\ true\r\n\ @param\ condition\ It's\ the\ condition\ that\ is\ going\ to\ be\ checked\r\n\ @param\ message\ It's\ the\ error\ message\ that\ will\ be\ thrown\ if\ the\ condition\ is\ not\ true\r\n
comment20.params=paxNumber
comment20.target=void\ loadPax(int)
comment20.text=\r\n\ Fills\ distributed(randomly)\ the\ airplane\ with\ a\ given\ number\ of\ virtual\ passenger\r\n\ @param\ paxNumber\ It's\ the\ number\ of\ passengers\ that\ you\ want\ to\ sit\r\n
comment21.params=
comment21.target=void\ printManifest()
comment21.text=\r\n\ Prints\ the\ manifest\ of\ the\ airplane.\ It's\ divided\ by\ class\ and\ it\ shows\ the\ seat,\ name,\ surname\ \ and\ age\ of\ every\ passenger\r\n
comment22.params=
comment22.target=void\ print()
comment22.text=\r\n\ Prints\ a\ drawing\ of\ the\ seats\ of\ the\ airplane\ indicating\ the\ empty\ seats,\ adults\ and\ children\r\n
comment23.params=
comment23.target=int\ getYoungestAgeOnBoard()
comment23.text=\r\n\ Returns\ the\ youngest\ age\ on\ board\r\n\ @return\ The\ youngest\ age.\ Returns\ -1\ if\ there's\ nobody\ on\ board\r\n
comment24.params=
comment24.target=java.util.ArrayList\ getYoungestPeopleOnBoard()
comment24.text=\r\n\ Returns\ a\ list\ containing\ the\ youngest\ people\ on\ board\r\n\ @return\ A\ list\ containing\ the\ youngest\ people\ on\ board\r\n
comment25.params=gender
comment25.target=int\ countFirstClassElderlyPax(boolean)
comment25.text=\r\n\ Counts\ the\ number\ of\ passengers\ in\ the\ first\ class\ (by\ gender)\ whose\ age\ is\ over\ 65\r\n\ @param\ gender\ It's\ the\ gender\ of\ the\ passengers\ that\ you\ are\ going\ to\ check\ if\ the\ are\ over\ 65\r\n\ @return\ The\ number\ of\ passengers\ in\ the\ first\ class\ (by\ gender)\ whose\ age\ is\ over\ 65\r\n
comment26.params=row
comment26.target=Person[]\ getRow(int)
comment26.text=\r\n\ Returns\ the\ given\ row\ as\ a\ list\ of\ passengers\r\n\ @param\ row\ It's\ the\ given\ row\r\n\ @return\ It's\ the\ list\ of\ passengers\ in\ the\ row\r\n
comment27.params=col
comment27.target=Person[]\ getCol(int)
comment27.text=\r\n\ Returns\ the\ given\ column\ as\ a\ list\ of\ passengers\r\n\ @param\ col\ It's\ the\ given\ col\r\n\ @return\ It's\ the\ list\ of\ passengers\ in\ the\ col\r\n
comment28.params=colA\ colB
comment28.target=void\ interchangeSeats(int,\ int)
comment28.text=\r\n\ Interchanges\ the\ seats\ of\ the\ passengers\ in\ A\ and\ B\r\n\ @param\ colA\ It's\ one\ of\ the\ given\ columns\r\n\ @param\ colB\ It's\ the\ other\ given\ column\r\n
comment3.params=row\ col
comment3.target=boolean\ verifyCoordinates(int,\ int)
comment3.text=\r\n\ Throws\ an\ error\ message\ if\ the\ coordinates\ are\ wrong.\r\n\ @param\ row\ It's\ the\ number\ of\ the\ row\ that\ is\ going\ to\ be\ checked\r\n\ @param\ col\ It's\ the\ number\ of\ the\ column\ that\ is\ going\ to\ be\ checked\r\n\ @return\ True\ if\ all\ the\ tests\ pass\r\n
comment4.params=col
comment4.target=boolean\ verifyCol(int)
comment4.text=\r\n\ Throws\ an\ error\ message\ if\ the\ coordinates\ of\ the\ column\ are\ wrong\r\n\ @param\ col\ It's\ the\ number\ of\ the\ column\ that\ is\ going\ to\ be\ checked\r\n\ @return\ True\ if\ all\ the\ tests\ pass\r\n
comment5.params=row
comment5.target=boolean\ verifyRow(int)
comment5.text=\r\n\ Throws\ an\ error\ message\ if\ the\ coordinates\ are\ wrong.\r\n\ @param\ row\ It's\ the\ number\ of\ the\ row\ that\ is\ going\ to\ be\ checke\r\n\ @return\ True\ if\ all\ the\ tests\ pass\r\n
comment6.params=
comment6.target=int\ getRows()
comment6.text=\r\n\ Returns\ the\ number\ of\ rows\ that\ are\ in\ the\ airplane\r\n\ @return\ The\ number\ of\ rows\ that\ are\ in\ the\ airplane\r\n
comment7.params=
comment7.target=int\ getRowsFirstClass()
comment7.text=\r\n\ Returns\ the\ number\ of\ first\ class\ rows\ that\ are\ in\ the\ airplane\r\n\ @return\ The\ number\ of\ first\ class\ rows\ that\ are\ in\ the\ airplane\r\n
comment8.params=
comment8.target=int\ getRowsStandardClass()
comment8.text=\r\n\ Returns\ the\ number\ of\ standard\ class\ rows\ that\ are\ in\ the\ airplane\r\n\ @return\ The\ number\ of\ standard\ class\ rows\ that\ are\ in\ the\ airplane\r\n
comment9.params=
comment9.target=int\ getSize()
comment9.text=\r\n\ Returns\ the\ number\ of\ seats\ that\ are\ in\ the\ airplane\r\n\ @return\ The\ number\ of\ seats\ that\ are\ in\ the\ airplane\r\n
numComments=29
